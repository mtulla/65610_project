 %0 = _inp_1                            # EncryptedTensor<int3, shape=(1, 12)>
 %1 = [[ 0 -3 -3 ... -2  1  0]]         # ClearTensor<int3, shape=(12, 30)>                      @ /fc1/Gemm.matmul
 %2 = matmul(%0, %1)                    # EncryptedTensor<uint4, shape=(1, 30)>                  @ /fc1/Gemm.matmul
 %3 = astype(%2, dtype=float64)         # EncryptedTensor<float64, shape=(1, 30)>                @ /fc1/Gemm.matmul_rounding
 %4 = 0                                 # ClearScalar<uint1>
 %5 = add(%3, %4)                       # EncryptedTensor<float64, shape=(1, 30)>
 %6 = [[0 0 0 0  ...  0 0 0 0]]         # ClearTensor<uint1, shape=(1, 30)>
 %7 = subtract(%5, %6)                  # EncryptedTensor<float64, shape=(1, 30)>
 %8 = 0.023968668654561043              # ClearScalar<float64>
 %9 = multiply(%8, %7)                  # EncryptedTensor<float64, shape=(1, 30)>
%10 = [-0.154527 ... .05834858]         # ClearTensor<float32, shape=(30,)>
%11 = add(%9, %10)                      # EncryptedTensor<float64, shape=(1, 30)>
%12 = 0                                 # ClearScalar<uint1>
%13 = maximum(%11, %12)                 # EncryptedTensor<float64, shape=(1, 30)>
%14 = 0.25                              # ClearScalar<float32>
%15 = divide(%13, %14)                  # EncryptedTensor<float64, shape=(1, 30)>
%16 = 0.0                               # ClearScalar<float32>
%17 = add(%15, %16)                     # EncryptedTensor<float64, shape=(1, 30)>
%18 = -4.0                              # ClearScalar<float64>
%19 = 3.0                               # ClearScalar<float64>
%20 = clip(%17, %18, %19)               # EncryptedTensor<float64, shape=(1, 30)>
%21 = rint(%20)                         # EncryptedTensor<float64, shape=(1, 30)>
%22 = 0.0                               # ClearScalar<float32>
%23 = subtract(%21, %22)                # EncryptedTensor<float64, shape=(1, 30)>
%24 = 0.25                              # ClearScalar<float32>
%25 = multiply(%23, %24)                # EncryptedTensor<float64, shape=(1, 30)>
%26 = 0.25                              # ClearScalar<float64>
%27 = divide(%25, %26)                  # EncryptedTensor<float64, shape=(1, 30)>
%28 = 0                                 # ClearScalar<uint1>
%29 = add(%27, %28)                     # EncryptedTensor<float64, shape=(1, 30)>
%30 = rint(%29)                         # EncryptedTensor<float64, shape=(1, 30)>
%31 = astype(%30, dtype=int_)           # EncryptedTensor<uint1, shape=(1, 30)>
%32 = [[ 3  3  3 ...  2  2  2]]         # ClearTensor<int3, shape=(30, 30)>                      @ /fc2/Gemm.matmul
%33 = matmul(%31, %32)                  # EncryptedTensor<uint5, shape=(1, 30)>                  @ /fc2/Gemm.matmul
%34 = astype(%33, dtype=float64)        # EncryptedTensor<float64, shape=(1, 30)>                @ /fc2/Gemm.matmul_rounding
%35 = 0                                 # ClearScalar<uint1>
%36 = add(%34, %35)                     # EncryptedTensor<float64, shape=(1, 30)>
%37 = [[0 0 0 0  ...  0 0 0 0]]         # ClearTensor<uint1, shape=(1, 30)>
%38 = subtract(%36, %37)                # EncryptedTensor<float64, shape=(1, 30)>
%39 = 0.015205194242298603              # ClearScalar<float64>
%40 = multiply(%39, %38)                # EncryptedTensor<float64, shape=(1, 30)>
%41 = [ 2.331656 ... 93263e-01]         # ClearTensor<float32, shape=(30,)>
%42 = add(%40, %41)                     # EncryptedTensor<float64, shape=(1, 30)>
%43 = 0                                 # ClearScalar<uint1>
%44 = maximum(%42, %43)                 # EncryptedTensor<float64, shape=(1, 30)>
%45 = 0.25                              # ClearScalar<float32>
%46 = divide(%44, %45)                  # EncryptedTensor<float64, shape=(1, 30)>
%47 = 0.0                               # ClearScalar<float32>
%48 = add(%46, %47)                     # EncryptedTensor<float64, shape=(1, 30)>
%49 = -4.0                              # ClearScalar<float64>
%50 = 3.0                               # ClearScalar<float64>
%51 = clip(%48, %49, %50)               # EncryptedTensor<float64, shape=(1, 30)>
%52 = rint(%51)                         # EncryptedTensor<float64, shape=(1, 30)>
%53 = 0.0                               # ClearScalar<float32>
%54 = subtract(%52, %53)                # EncryptedTensor<float64, shape=(1, 30)>
%55 = 0.25                              # ClearScalar<float32>
%56 = multiply(%54, %55)                # EncryptedTensor<float64, shape=(1, 30)>
%57 = 0.25                              # ClearScalar<float64>
%58 = divide(%56, %57)                  # EncryptedTensor<float64, shape=(1, 30)>
%59 = 0                                 # ClearScalar<uint1>
%60 = add(%58, %59)                     # EncryptedTensor<float64, shape=(1, 30)>
%61 = rint(%60)                         # EncryptedTensor<float64, shape=(1, 30)>
%62 = astype(%61, dtype=int_)           # EncryptedTensor<uint1, shape=(1, 30)>
%63 = [[-1  2] [ ... ] [ 2  0]]         # ClearTensor<int3, shape=(30, 2)>                       @ /fc3/Gemm.matmul
%64 = matmul(%62, %63)                  # EncryptedTensor<uint5, shape=(1, 2)>                   @ /fc3/Gemm.matmul
return %64
